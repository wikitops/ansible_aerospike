# {{ ansible_managed }}
# -----------------------------------
# Aerospike tools configuration file.
# -----------------------------------
#
# You can copy this to one of:
# - "/etc/aerospike/astools.conf" to set global options,
# - "~/.aerospike/astools.conf" to set user-specific options.
#
# One can use all long options that the program supports.
# Run program with --help to get a list of available options.
#
# The commented-out settings shown in this file represent the default values.
#
#
# Options common to all the tools
#
#------------------------------------------------------------------------------
# cluster specific options
#
# This section has connection / security / tls specific configuration optoins.
# Optionally many different named connection instances can be specified.
#------------------------------------------------------------------------------
#
[cluster]
host = "{{ inventory_hostname }}:{{ aerospike_cluster_name }}:{{ aerospike_port_service }}"                      # host = [ <host>[:<tls-name>][:<port>], ...]
# user = ""
# password = ""

#------------------------------------------------------------------------------
# Transport Level Encryption
#------------------------------------------------------------------------------
#
#
# tls-enable = false                  # true enables tls, if false all other tls
                                     # config are ignored
# tls-protocols = "-all,+TLSv1.2"
# tls-cipher-suite = "ALL:!COMPLEMENTOFDEFAULT:!eNULL"
# tls-crl-check = true
# tls-crl-check-all = true

# tls-keyfile = "/etc/aerospike/x509_certificates/MultiServer/key.pem"

# One of the tls-cafile or tls-capath is required. if both are specified
# everything is loaded.
#
# tls-cafile = "/etc/aerospike/x509_certificates/Platinum/cacert.pem"
# tls-capath = "/etc/aerospike/x509_certificates/Platinum"
#
# tls-certfile = "/etc/aerospike/x509_certificates/multi_chain.pem"
# tls-cert-blacklist = "/etc/aerospike/x509_certificates/blacklist.txt"

[cluster_secure]
host = "{{ inventory_hostname }}:{{ aerospike_cluster_name }}:{{ aerospike_port_service }}"
user = "{{ aerospike_cluster_user }}"
password = "{{ aerospike_cluster_password }}"

[cluster_tls]
host = "{{ inventory_hostname }}:{{ aerospike_cluster_name }}:{{ aerospike_port_service }}"
tls-enable = true
tls-protocols = "-all,+TLSv1.2"
tls-cipher-suite = "ALL:!COMPLEMENTOFDEFAULT:!eNULL"
tls-crl-check = true
tls-crl-check-all = true
tls-keyfile = "/etc/aerospike/x509_certificates/MultiServer/key.pem"
tls-cafile = "/etc/aerospike/x509_certificates/Platinum/cacert.pem"
tls-capath = "/etc/aerospike/x509_certificates/Platinum"
tls-certfile = "/etc/aerospike/x509_certificates/multi_chain.pem"
tls-cert-blacklist = "/etc/aerospike/x509_certificates/blacklist.txt"


# Following are tools specific options
#
# Optionally corresponding to named instance in cluster section aql can also
# have instance specific config
#
#------------------------------------------------------------------------------
# asql specific options
#------------------------------------------------------------------------------
[aql]
# threadpoolsize = 3                # Client internal threadpool size, increase
                                   # if connecting to large size cluster
# outputmode = "table"              # Can be one of the json/table/raw/mute
# outputtypes = true                # Prints the bin type (map/list/sorted map)
# timeout = 1000                    # in ms for all request.
# udfuser = "/opt/aerospike/usr"
# udfsys  = "/opt/aerospike/sys"

[aql_secure]
timeout = 5000


#------------------------------------------------------------------------------
# asadm specific options
#------------------------------------------------------------------------------
[asadm]
# services-alumni = true
# services-alternate = false
# timeout = 5

[asadm_secure]
# services-alternate = true
# timeout = 1000


#------------------------------------------------------------------------------
# asbackup specific options
#------------------------------------------------------------------------------
[asbackup]

# estimate = true

# directory = "./test_backup"
# output-file = "test_backup"
# machine = "run.out"


#------------- Data Options ------------------------
# namespace = "test"
# set = "demo"
# bin_list = "bin1,bin2"
# node-list = ""
# percent = 100

#-----------Performance and throttling--------------
# file-limit = 1
# priority = 2
# parallel = 4
# bandwidth = 1
# compact = true


#----------- Meta data options ---------------------
# no-records = false
# no-udfs = false

# no-cluster-change = true

#------------------------------------------------------------------------------
# asrestore specific options
#------------------------------------------------------------------------------
[asrestore]

# directory = "./test_backup"
# input-file = "test_backup"
# machine = "run.out"

#------------- Data Options ------------------------
# namespace = "test"
# bin-list = "bin1,bin2"
# set-list = "demo"

#----- Mutually exclusive record update options-----
# unique = true
# replace = true
# no-generation = true


#----------- Meta data options ---------------------
# no-udfs = false
# no-indexes = false
# no-records = false
# indexes-last = false
# wait = false

#-----------Performance and throttling--------------
# nice-list = "1,10000"
# threads = 32



#------------------------------------------------------------------------------
# CONFIG FILE INCLUDES
#------------------------------------------------------------------------------
#
# These options allow settings to be loaded from files other than the
# default astools.conf.
#
# Note:
#
# The file in directory are read in undefined order. Avoid having
# duplicate sections.
#
# Include file and directory are loaded after config file it is part
# of.

[include]
# file = "./astools.conf"      # include file only if it exists,
# directory = "/etc/aerospike/conf.d"             # directory 'conf.d'
